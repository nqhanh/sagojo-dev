<?php
// Exit if accessed directly
if ( !defined('ABSPATH')) exit;

/**
 *
 * WARNING: Please do not edit this file in any way
 *
 * load the theme function files
 */
require ( get_template_directory() . '/core/includes/functions.php' );
require ( get_template_directory() . '/core/includes/theme-options.php' );
require ( get_template_directory() . '/core/includes/post-custom-meta.php' );
require ( get_template_directory() . '/core/includes/tha-theme-hooks.php' );
require ( get_template_directory() . '/core/includes/hooks.php' );
require ( get_template_directory() . '/core/includes/version.php' );


/*wp_deregister_script('admin-bar');
wp_deregister_style('admin-bar');
remove_action('wp_footer','wp_admin_bar_render',1000);*/

    if (!function_exists('disableAdminBar')) {  
      
        function disableAdminBar(){  
        
        remove_action( 'admin_footer', 'wp_admin_bar_render', 1000 );  
        
      }  
      
    }  
      
    add_filter('admin_head','remove_admin_bar_style_backend'); 
    
        function remove_admin_bar_style_backend() {   
      echo '<style>body.admin-bar #wpcontent, body.admin-bar #adminmenu { padding-top: 0px !important; }</style>';  
    }  
            
    add_filter('admin_head','remove_admin_bar_style_backend');
    
    
        if (!function_exists('disableAdminBar')) {  
      
        function disableAdminBar(){  
        
        remove_action( 'admin_footer', 'wp_admin_bar_render', 1000 );  
        
        function remove_admin_bar_style_backend() {   
          echo '<style>body.admin-bar #wpcontent, body.admin-bar #adminmenu { padding-top: 0px !important; }</style>';  
        }  
                
        add_filter('admin_head','remove_admin_bar_style_backend');  
        
      }  
      
    }  
      
    add_filter('admin_head','remove_admin_bar_style_backend');   
    
    
        remove_action( 'wp_footer', 'wp_admin_bar_render', 1000 );  
        
        if (!function_exists('disableAdminBar')) {  
  
    function disableAdminBar(){  
    
    remove_action( 'admin_footer', 'wp_admin_bar_render', 1000 ); // for the admin page  
    remove_action( 'wp_footer', 'wp_admin_bar_render', 1000 ); // for the front end  
    
    function remove_admin_bar_style_backend() {   
      echo '<style>body.admin-bar #wpcontent, body.admin-bar #adminmenu { padding-top: 0px !important; }</style>';  
    }  
            
    add_filter('admin_head','remove_admin_bar_style_backend');  
      
    }  
  
}  
  
add_filter('admin_head','remove_admin_bar_style_backend'); 

    function remove_admin_bar_style_frontend() {   
      echo '<style type="text/css" media="screen"> 
      html { margin-top: 0px !important; } 
      * html body { margin-top: 0px !important; } 
      </style>';  
    }  
      
    add_filter('wp_head','remove_admin_bar_style_frontend', 99);  
    
        if (!function_exists('disableAdminBar')) {  
      
        function disableAdminBar(){  
        
        remove_action( 'admin_footer', 'wp_admin_bar_render', 1000 ); // for the admin page  
        remove_action( 'wp_footer', 'wp_admin_bar_render', 1000 ); // for the front end  
        
        function remove_admin_bar_style_backend() {  // css override for the admin page  
          echo '<style>body.admin-bar #wpcontent, body.admin-bar #adminmenu { padding-top: 0px !important; }</style>';  
        }  
                
        add_filter('admin_head','remove_admin_bar_style_backend');  
          
        function remove_admin_bar_style_frontend() { // css override for the frontend  
          echo '<style type="text/css" media="screen"> 
          html { margin-top: 0px !important; } 
          * html body { margin-top: 0px !important; } 
          </style>';  
        }  
          
        add_filter('wp_head','remove_admin_bar_style_frontend', 99);  
        
      }  
      
    }  
      
     add_filter('admin_head','remove_admin_bar_style_backend'); // Original version  
    //add_action('init','disableAdminBar’); // New version  
	
//Cat chuoi
function st_substr($str, $length, $minword = 3)

{

    $sub = '';

    $len = 0;

   

    foreach (explode(' ', $str) as $word)

    {

        $part = (($sub != '') ? ' ' : '') . $word;

        $sub .= $part;

        $len += strlen($part);

       

        if (strlen($word) > $minword && strlen($sub) >= $length)

        {

            break;

        }

    }

   

    return $sub . (($len < strlen($str)) ? '...' : '');

}	
//Them widget jobseeker login form vao theme
if (function_exists('register_sidebar')) {  
     register_sidebar(array(  
      'name' => 'Jobseeker Login Widgets',  
      'id'   => 'jobseeker-sidebar-widgets',  
      'description'   => 'Jobseeker Login Widgets',  
      'before_widget' => '',  
      'after_widget'  => '',  
      'before_title'  => '',  
      'after_title'   => ''  
     ));  
    }  
	//Them widget vao theme
	
	//Them widget employer login vao theme
if (function_exists('register_sidebar')) {  
     register_sidebar(array(  
      'name' => 'Employer Login Widgets',  
      'id'   => 'employer-sidebar-widgets',  
      'description'   => 'Employer Login Widgets',  
      'before_widget' => '',  
      'after_widget'  => '',  
      'before_title'  => '<div id="logintext">',  
      'after_title'   => '</div>'   
     ));  
    }  
	//Them widget vao theme
	
//Them widget job search vao theme
if (function_exists('register_sidebar')) {  
     register_sidebar(array(  
      'name' => 'Job Type Widgets',  
      'id'   => 'job-type-widgets',  
      'description'   => 'Widget Area',  
      'before_widget' => '',  
      'after_widget'  => '',  
      'before_title'  => '',  
      'after_title'   => ''  
     ));  
    }  
	//Them widget vao theme
	
//Them widget Login vao theme
if (function_exists('register_sidebar')) {
   register_sidebar(array(
   'name' => 'Recommendation Page Widgets',
   'id'   => 'recommend-page-widgets',
   'description'   => 'Recommendation Page Widget',
   'before_widget' => '<div>',
   'after_widget'  => '</div>',
   'before_title'  => '',
   'after_title'   => ''
    	));
}
//Them widget vao theme
    
//Them widget Login vao theme
if (function_exists('register_sidebar')) {  
     register_sidebar(array(  
      'name' => 'Jobseeker Page Widgets',  
      'id'   => 'job-page-widgets',  
      'description'   => 'Jobseeker Page Widget',  
      'before_widget' => '<div>',  
      'after_widget'  => '</div>',  
      'before_title'  => '',  
      'after_title'   => ''  
     ));  
    }  
	//Them widget vao theme
	
load_theme_textdomain('wpjobboard');
 
function login_with_email_address($username) {
        $user = get_user_by('email',$username);
        if(!empty($user->user_login))
                $username = $user->user_login;
        return $username;
}
add_action('wp_authenticate','login_with_email_address');





/**
 * Fuction Hanh tao them cho chuc nang dau gia viec lam
 
 * Sets up the theme and provides some helper functions. Some helper functions
 * are used in the theme as custom template tags. Others are attached to action and
 * filter hooks in WordPress to change core functionality.
 *
 *
 * For more information on hooks, actions, and filters, see http://codex.wordpress.org/Plugin_API.
 */
include('wpf-setup.php');


// block WP-ADMIN
//add_action('admin_init','mp_admin_init');

// Deny wp-admin to all but the super admin.
function mp_admin_init()
{
require_once(ABSPATH . WPINC . '/pluggable.php');
$current_user = wp_get_current_user();
if($current_user->ID != '1' )
{
wp_redirect(get_option('home'),302);
die();
}
}

if ( ! function_exists( 'majormedia_setup' ) ):
/**
 * Sets up theme defaults and registers support for various WordPress features.
 */
function majormedia_setup() {
	
	/**
	 * Make theme available for translation
	 * Translations can be filed in the /languages/ directory
	 */
	load_theme_textdomain( 'responsive', get_template_directory() . '/languages' );

	/**
	 * Add default posts and comments RSS feed links to head
	 */
	add_theme_support( 'automatic-feed-links' );

	/**
	 * This theme uses wp_nav_menu() in one location.
	 */
	register_nav_menus( array(
		'primary' => __( 'Primary Menu', 'responsive' ),
	) );

	add_theme_support('post-thumbnails'); 
	// This theme styles the visual editor with editor-style.css to match the theme style.
	add_editor_style();
	// custom backgrounds
	

	// adding post format support
	add_theme_support( 'post-formats', 
		array( 
			'aside', /* Typically styled without a title. Similar to a Facebook note update */
			'gallery', /* A gallery of images. Post will likely contain a gallery shortcode and will have image attachments */
			'link', /* A link to another site. Themes may wish to use the first <a href=ÓÓ> tag in the post content as the external link for that post. An alternative approach could be if the post consists only of a URL, then that will be the URL and the title (post_title) will be the name attached to the anchor for it */
			'image', /* A single image. The first <img /> tag in the post could be considered the image. Alternatively, if the post consists only of a URL, that will be the image URL and the title of the post (post_title) will be the title attribute for the image */
			'quote', /* A quotation. Probably will contain a blockquote holding the quote content. Alternatively, the quote may be just the content, with the source/author being the title */
			'status', /*A short status update, similar to a Twitter status update */
			'video', /* A single video. The first <video /> tag or object/embed in the post content could be considered the video. Alternatively, if the post consists only of a URL, that will be the video URL. May also contain the video as an attachment to the post, if video support is enabled on the blog (like via a plugin) */
			'audio', /* An audio file. Could be used for Podcasting */
			'chat' /* A chat transcript */
		)
	);
}
endif;

add_action( 'after_setup_theme', 'majormedia_setup' );

/**
 * Set the content width based on the theme's design and stylesheet.
 */
function majormedia_content_width() {
	global $content_width;
	if (!isset($content_width))
		$content_width = 615; /* pixels */
}
add_action( 'after_setup_theme', 'majormedia_content_width' );

/**
 * Title filter 
 */
function majormedia_filter_wp_title( $title ) {
    // Get the Site Name
    $majormedia_site_name = get_bloginfo( 'name' );
    // Prepend name
    $majormedia_filtered_title = $majormedia_site_name . $title;

	// Get the Site Description
	$majormedia_site_description = get_bloginfo( 'description' );
	// Append Site Description to title
	if ( $majormedia_site_description && ( is_home() || is_front_page() ) ) {
		$majormedia_filtered_title = $majormedia_site_name . ' | ' . $majormedia_site_description;
	}

    // Return the modified title
    return $majormedia_filtered_title;
}
// Hook into 'wp_title'
//add_filter( 'wp_title', 'majormedia_filter_wp_title' );




/**
 * Get our wp_nav_menu() fallback, wp_page_menu(), to show a home link.
 */
if ( ! function_exists( 'majormedia_main_nav' ) ) :
function majormedia_main_nav() {
	// display the wp3 menu if available
    wp_nav_menu( 
    	array( 
    		'menu' => 'primary', /* menu name */
			'container' => 'div',
			'container_class' => 'hmenuc',
    		'theme_location' => 'primary', /* where in the theme it's assigned */
    		'container_class' => 'menu', /* container class */
    		'fallback_cb' => 'majormedia_main_nav_fallback' /* menu fallback */
    	)
    );
}
endif;

if ( ! function_exists( 'majormedia_main_nav_fallback' ) ) :
	function majormedia_main_nav_fallback() { wp_page_menu( 'show_home=Home&menu_class=menu' ); }
endif;


function majormedia_enqueue_comment_reply() {
        if ( is_singular() && comments_open() && get_option( 'thread_comments' ) ) {
                wp_enqueue_script( 'comment-reply' );
        }
 }
add_action( 'wp_enqueue_scripts', 'majormedia_enqueue_comment_reply' );


function majormedia_page_menu_args( $args ) {
	$args['show_home'] = true;
	return $args;
}
add_filter( 'wp_page_menu_args', 'majormedia_page_menu_args' );

if ( ! function_exists( 'majormedia_content_nav' ) ):
/**
 * Display navigation to next/previous pages when applicable
 */
function majormedia_content_nav( $nav_id ) {
	global $wp_query;?>
	<nav id="<?php echo $nav_id;?>">
		<h1 class="assistive-text section-heading"><?php _e( 'Post navigation', 'responsive' ); ?></h1>

	<?php if ( is_single() ) :// navigation links for single posts?>

		<?php previous_post_link( '<div class="nav-previous">%link</div>', '<span class="meta-nav">' . _x( '&larr;', 'Previous post link', 'responsive' ) . '</span> Previous' );?>
		<?php next_post_link( '<div class="nav-next">%link</div>', 'Next <span class="meta-nav">' . _x( '&rarr;', 'Next post link', 'responsive' ) . '</span>' );?>

	<?php elseif ( $wp_query->max_num_pages > 1 && ( is_home() || is_archive() || is_search() ) ) :// navigation links for home, archive, and search pages?>

		<?php if ( get_next_posts_link() ) :?>
		<div class="nav-previous"><?php next_posts_link( __( '<span class="meta-nav">&larr;</span> Older posts', 'responsive' ) );?></div>
		<?php endif;?>

		<?php if ( get_previous_posts_link() ) :?>
		<div class="nav-next"><?php previous_posts_link( __( 'Newer posts <span class="meta-nav">&rarr;</span>', 'responsive' ) );?></div>
		<?php endif;?>

	<?php endif;?>

	</nav><!-- #<?php echo $nav_id;?> -->
	<?php
}
endif;


if ( ! function_exists( 'majormedia_posted_on' ) ) :
/**
 * Prints HTML with meta information for the current post-date/time and author.
 */
function majormedia_posted_on() {
	printf( __( '<span class="sep">Posted on </span><a href="%1$s" title="%2$s" rel="bookmark"><time class="entry-date" datetime="%3$s" pubdate>%4$s</time></a><span class="byline"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="%5$s" title="%6$s" rel="author">%7$s</a></span></span>', 'responsive' ),
		esc_url( get_permalink() ),
		esc_attr( get_the_time() ),
		esc_attr( get_the_date( 'c' ) ),
		esc_html( get_the_date() ),
		esc_url( get_author_posts_url( get_the_author_meta( 'ID' ) ) ),
		esc_attr( sprintf( __( 'View all posts by %s', 'responsive' ), get_the_author() ) ),
		esc_html( get_the_author() )
	);
	echo " | ";
	echo get_the_freelance_term_list( $post->ID, 'freelance_category', _e('[:en]category: [:vi]mục: '), ', ', '' );
	echo "<br />";
	echo get_the_term_list( $post->ID, 'freelance_tag', _e('[:en]skills: [:vi]kỹ năng: '), ' ', '' );
	if (is_super_admin() ) edit_post_link( __( '(Edit)', 'responsive' ), '<span class="edit-link">', '</span>' );
}
endif;

/**
 * Adds custom classes to the array of body classes.
 */
function majormedia_body_classes( $classes ) {
	// Adds a class of single-author to blogs with only 1 published author
	if ( ! is_multi_author() ) {
		$classes[] = 'single-author';
	}

	return $classes;
}
add_filter( 'body_class', 'majormedia_body_classes' );

/**
 * Returns true if a blog has more than 1 category
 */
function majormedia_categorized_blog() {
	if ( false === ( $all_the_cool_cats = get_transient( 'all_the_cool_cats' ) ) ) {
		// Create an array of all the categories that are attached to posts
		$all_the_cool_cats = get_categories( array(
			'hide_empty' => 1,
		) );

		// Count the number of categories that are attached to the posts
		$all_the_cool_cats = count( $all_the_cool_cats );

		set_transient( 'all_the_cool_cats', $all_the_cool_cats );
	}

	if ( '1' != $all_the_cool_cats ) {
		// This blog has more than 1 category so majormedia_categorized_blog should return true
		return true;
	} else {
		// This blog has only 1 category so majormedia_categorized_blog should return false
		return false;
	}
}

/**
 * Flush out the transients used in majormedia_categorized_blog
 */
function majormedia_category_transient_flusher() {
	// Like, beat it. Dig?
	delete_transient( 'all_the_cool_cats' );
}
add_action( 'edit_category', 'majormedia_category_transient_flusher' );
add_action( 'save_post', 'majormedia_category_transient_flusher' );

/**
 * Filter in a link to a content ID attribute for the next/previous image links on image attachment pages
 */
function majormedia_enhanced_image_navigation( $url ) {
	global $post, $wp_rewrite;

	$id = (int) $post->ID;
	$object = get_post( $id );
	if ( wp_attachment_is_image( $post->ID ) && ( $wp_rewrite->using_permalinks() && ( $object->post_parent > 0 ) && ( $object->post_parent != $id ) ) )
		$url = $url . '#main';

	return $url;
}
add_filter( 'attachment_link', 'majormedia_enhanced_image_navigation' );

if ( ! function_exists( 'max_magazine_pagination' ) ) :
function max_magazine_pagination() {

	global $wp_query;



	$big = 999999999; // This needs to be an unlikely integer



	// For more options and info view the docs for paginate_links()

	// http://codex.wordpress.org/Function_Reference/paginate_links

	$paginate_links = paginate_links( array(

			'base' => str_replace( $big, '%#%', get_pagenum_link($big) ),

			'current' => max( 1, get_query_var('paged') ),

			'total' => $wp_query->max_num_pages,
			
			'mid_size' => 5,

	) );



	// Display the pagination if more than one page is found

	if ( $paginate_links ) {

		echo '<div class="pagination">';

		echo $paginate_links;

		echo '</div><!--// end .pagination -->';

	}

}
endif;

if ( ! function_exists( 'majormedia_pagination' ) ) :
function majormedia_pagination($pages = '', $range = 2)
{
     $showitems = ($range * 2)+1; 
 
     global $paged;
     if(empty($paged)) $paged = 1;
 
 
     if($pages == '')
     {
         global $the_query;
         $pages = $the_query->max_num_pages;
         add_query_arg( 'post_type', 'freelance_post' );
		 if(!$pages)
         {
             $pages = 1;
         }
     }  
 
     if(1 != $pages)
     {
         /*printf( __( '<div class="pagination"><span>Page %1$s of %2$s</span>', 'responsive'), $paged, $pages );*/
		 printf('<div class="pagination">');
         if($paged > 2 && $paged > $range+1 && $showitems < $pages) printf( __( '<a href="%1$s">&laquo; First</a>', 'responsive' ), get_pagenum_link(1) );
         if($paged > 1 && $showitems < $pages) printf( __( '<a href="%1$s">&lsaquo; Previous</a>', 'responsive' ), get_pagenum_link($paged - 1) );
 
         for ($i=1; $i <= $pages; $i++)
         {
             if (1 != $pages &&( !($i >= $paged+$range+1 || $i <= $paged-$range-1) || $pages <= $showitems ))
             {
                 echo ($paged == $i)? "<span class=\"current\">".$i."</span>":"<a href='".get_pagenum_link($i)."' class=\"inactive\">".$i."</a>";
             }
         }
 
         if ($paged < $pages && $showitems < $pages) printf( __( '<a href="%1$s">Next &rsaquo;</a>', 'responsive' ), get_pagenum_link($paged + 1) );
         if ($paged < $pages-1 &&  $paged+$range-1 < $pages && $showitems < $pages) printf( __( '<a href="%1$s">Last &raquo;</a>', 'responsive' ), get_pagenum_link($pages) );
         echo "</div>\n";
     }
}
endif;

function majormedia_custom_scripts() {
	wp_enqueue_script( 'custom', get_template_directory_uri() . '/library/js/scripts.js', array( 'jquery' ), '1.0.0' );
}
add_action('wp_enqueue_scripts', 'majormedia_custom_scripts');

/*
comment form data - ESTIMATES RESPONSES
*/
// extra form fields comments
	
	add_action( 'comment_form_logged_in_after', 'additional_fields' );
	add_action( 'comment_form_after_fields', 'additional_fields' );

	function additional_fields () 
	{
		$current_user = wp_get_current_user();
		$currency = get_post_meta(get_the_ID(), 'cf_currency', TRUE);
		$currency = '<input type="text" name="currency" id="currency" value="'.$currency.'" disabled size=5>';
		echo '<div class="half"><label class="function-freelance-budget-deadline" for="budget">' . __( 'Your price estimate:' ,'responsive') . '</label><input id="title-freelance-budget-deadline" name="budget" type="text" size="30"  tabindex="5"  class="requiredField" />'.$currency.'</div>';		
		echo '<div class="half"><label class="function-freelance-budget-deadline" for="deadline">' . __( 'Estimated time to complete:' ,'responsive') . '</label><input id="title-freelance-budget-deadline" name="deadline" type="text" size="30"  tabindex="5"  class="requiredField" /><select id="seclect_freelance_time" name="timetocomplete"><option name="week" value="[:en]week[:vi]tuần">'.__('Week(s)','responsive').'</option><option name="day" value="[:en]day[:vi]ngày">'.__('Day(s)','responsive').'</option><option name="hrs" value="[:en]hour[:vi]giờ">'.__('Hour(s)','responsive').'</option></select></div>';			
		echo '<input type="hidden" name="commentauthor" value="' . $current_user->ID . '">';
		echo '<input type="hidden" name="postauthor" value="' . get_the_author_meta('ID') . '">';		
	}

// save form field data		
	add_action( 'comment_post', 'processfields', 10, 1 );
	function processfields( $comment_ID )
		{
		if( isset( $_POST['budget'] ) ) update_comment_meta( $comment_ID, 'budget', esc_attr( $_POST['budget'] ) );
		if( isset( $_POST['deadline'] ) ) update_comment_meta( $comment_ID, 'deadline', esc_attr( $_POST['deadline'] ) );
		//if( isset( $_POST['currency'] ) ) update_comment_meta( $comment_ID, 'currency', esc_attr( $_POST['currency'] ) );
		if( isset( $_POST['timetocomplete'] ) ) update_comment_meta( $comment_ID, 'timetocomplete', esc_attr( $_POST['timetocomplete'] ) );
		// reward comment author
		$score = get_user_meta($_POST['commentauthor'] ,'score',TRUE );
		$score++;
		update_user_meta($_POST['commentauthor'] ,'score',$score );
		// reward post author
		$score = get_user_meta($_POST['postauthor'] ,'score',TRUE );
		$score=$score+6;
		update_user_meta($_POST['postauthor'] ,'score',$score );
		
		// send notice to the post owner
		$user = get_user_by('id', $_POST['postauthor']);
		$to = $user->user_email;
		$subject = __("someone responded to your freelance listing", 'responsive');
		$message .= __("Hello, a response to one of your listings was just posted on our site.\n", 'responsive');
		$message .= sprintf(__("You can visit %1$s to see your listing and its responses\n", 'responsive'), home_url() );
		/*wp_mail( $to, $subject, $message );*/			
		}

if ( ! function_exists( 'majormedia_comment' ) ) :

function majormedia_comment( $comment, $args, $depth ) {
	$GLOBALS['comment'] = $comment;
	switch ( $comment->comment_type ) :
		case 'pingback' :
		case 'trackback' :
	?>
	<li class="post pingback">
		<p><?php _e( 'Pingback:', 'responsive' ); ?> <?php comment_author_link(); ?><?php edit_comment_link( __( '(Edit)', 'responsive' ), ' ' ); ?></p>
	<?php
			break;
		default :?>
	<li <?php comment_class();?> id="li-comment-<?php comment_ID();?>">
		<div class='declined_caption_wrapper'>
		<div class='estimates'>
			<div class='estimates-middle'>			
				<?php if ( $comment->comment_approved == '0' ) :?>
					<em><?php _e( 'Your estimate is awaiting moderation.', 'responsive' );?></em>
					<br />
				<?php endif;?>

					<div id="comment-freelance-container">				
					<?php 
						echo  "<div id='contaier-freelan-com-esti'><div id='freelance-completed'>";
						$dline = get_comment_meta( $comment->comment_ID, 'deadline', true );
						if (empty($dline)) $dline = 0;
						$ttoc = get_comment_meta( $comment->comment_ID, 'timetocomplete', true );
						if (!empty($dline))
							{
								
							//printf( __( '%s', 'responsive' ), sprintf( '<cite class="fn">%s</cite>', get_comment_author_link() ) );
							//echo " ";
							_e('Completed in' , 'responsive');
							echo "<span class='number-dline-buget'>";
							echo $dline;
							echo "</span> ";
							if ($dline>1){
								_e($ttoc);
								_e('s' , 'responsive');
							}
							else _e($ttoc);
							}
						echo "</div>";?>
						<?php 
							echo "<div id='freelance-estimated'>";
							//printf( __( '%s', 'responsive' ), sprintf( '<cite class="fn">%s</cite>', get_comment_author_link() ) );
							//echo " ";
							_e('Estimated at' , 'responsive');
							echo " ";
							//echo human_time_diff( get_comment_time('U'), current_time('timestamp') ) ." " . __(' ago at: <br>','responsive');
							$budget = get_comment_meta( $comment->comment_ID, 'budget', true );
							if (empty($budget)) $budget = 0;
							$curency = get_post_meta(get_the_ID(), 'cf_currency', TRUE);
							if ($curency == 'VND') $curency = " đồng";
							echo "<span class='number-dline-buget'>";
							echo number_format($budget,0,",",".");
							echo "</span> ";
							echo $curency;
						echo "</div> <div style='clear:both'></div></div>";
						echo "<div id='comment-content'>";
						comment_text(); 
						echo "</div>";?>
					</div>
				
				
				<div class='estimates-left'>
					<div class='estimates-left-con'>
						<?php
						// let post owner decide which estimate to accept.
						$current_user = wp_get_current_user();			
						if (get_the_author_meta('ID') == $current_user->ID)
							{
							// we are the post owner
							echo "<!--welcome postowner estimateaccept is set to ". $_POST['estimateaccept'] ."-->";
							// postowner chose something on an estimate
							$bc = get_post_meta(get_the_ID(), 'estimatechosen', TRUE);
							if (wp_verify_nonce($_POST['estimateaccept'],get_comment_ID().'yes') && empty($bc) )	//security
								{
								// estimate selected - mark postmeta
								update_post_meta(get_the_ID(), 'estimatechosen', get_comment_ID() ); // set current comment ID in postmeta						
								
								// reward estimate author
								$authorname = $comment->comment_author;
								$cauthor = get_user_by('login', $authorname);		
								$rating = get_user_meta($cauthor->ID ,'rating',TRUE );
								$rating=$rating+7;
								update_user_meta($cauthor->ID ,'rating', $rating );					
								
								// show victory on comment
								echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/award.png' . "' title='" . __('And the winner is ......' , 'responsive') . "'>";
								_e('<strong>The job lister has chosen this offer and has closed the job offer</strong>', 'responsive');
								
								// send e-mail to estimator
								$to = $cauthor->user_email;
								$subject = __("your bid got accepted", 'responsive');
								$message .= __("Hello, an estimate or bid that you placed on our site just got accepted. \n", 'responsive');
								$message .= __("You can visit to see your listing and its responses. \n", 'responsive');
								$message .= "\n";
								$message .= __("The project owner just received an e-mail with your contact information. \n", 'responsive');
								$message .= __("You should also make contact with the project owner now to discuss things. \n", 'responsive');	
								$message .= __("Contact info: . \n", 'responsive').get_user_meta(get_the_author_meta('ID'), 'contactinfo', TRUE) . "\n";
								$message .= __("Phone number: . \n", 'responsive').get_user_meta(get_the_author_meta('ID'), 'phone', TRUE) . "\n";
								$message .= "Link: " . get_permalink( get_the_ID() ) ."\n";
								wp_mail( $to, $subject, $message );	
								}	
								
							elseif (wp_verify_nonce($_POST['estimateaccept'],get_comment_ID().'no') && empty($bc) )	//security
								{	
								// declined this estimate but not yet chosen a winner
								update_comment_meta( $comment->comment_ID, 'declined', '1' ); // set this estimate's meta
								echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/error.png' . "' title='" . __('Sorry, this is not the estimate chosen by the job poster.' , 'responsive') . "'>";						
								_e('The job lister has declined this offer but is still taking estimates and bids', 'responsive');
								}	
								
							else
								{
								echo "<!--welcome postowner - no requests taken-->";
								$declined = get_comment_meta( $comment->comment_ID, 'declined', TRUE );					
								$bidcheck = get_post_meta(get_the_ID(), 'estimatechosen', TRUE);
								if ($declined)
									{
									echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/error.png' . "' title='" . __('Sorry, this is not the estimate chosen by the job poster.' , 'responsive') . "'>";												
									_e('The job lister has declined this offer and has closed this job offer.', 'responsive');
									}
								elseif ($bidcheck == get_comment_ID())
									{
									// this is the winning estimate
									echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/award.png' . "' title='" . __('And the winner is ......' , 'responsive') . "'>";
									_e('The job lister has chosen this offer and has closed the job offer', 'responsive');
									}
								elseif (!empty($bidcheck))
									{
									// estimate is chosen but it's not us
									echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/error.png' . "' title='" . __('Sorry, this is not the estimate chosen by the job poster.' , 'responsive') . "'>";
									_e('The job lister has declined this offer and has closed this job offer.', 'responsive');
									}
								else
									{// provide postowner choice to accept offer?>
									<div id='accept_offer'>
										<form method='post'>
										<?php wp_nonce_field(get_comment_ID().'yes','estimateaccept'); ?>
										<input type="hidden" name="accept" value="yes">
										<input type="hidden" name="commid" value="<?php comment_ID(); ?>">
										<input type='image' src='<?php echo get_bloginfo('stylesheet_directory') ."/library/images/ok.png"; ?>' onmouseover="this.src='<?php echo get_bloginfo('stylesheet_directory') ."/library/images/tu.png"; ?>'" onmouseout="this.src='<?php echo get_bloginfo('stylesheet_directory') ."/library/images/ok.png"; ?>'">
										</form>
									
									<?php
									_e('Accept offer','responsive');?>
									
									</div>
									<div id='decline_offer'>
										<form method='post'>
										<?php wp_nonce_field(get_comment_ID().'no','estimateaccept'); ?>
										<input type="hidden" name="accept" value="no">
										<input type="hidden" name="commid" value="<?php comment_ID(); ?>">
										<input type='image' src='<?php echo get_bloginfo('stylesheet_directory') ."/library/images/error.png"; ?>' onmouseover="this.src='<?php echo get_bloginfo('stylesheet_directory') ."/library/images/td.png"; ?>'" onmouseout="this.src='<?php echo get_bloginfo('stylesheet_directory') ."/library/images/error.png"; ?>'">
										</form>
										<?php
										_e('Decline offer','responsive');
									
										echo "</div>";
									
									}
								}
							}
						else
							{
							echo "<!--welcome visitor - just browsing ?-->";
							// we are not the postowner so no choices - just display scenarios
							$declined = get_comment_meta( $comment->comment_ID, 'declined', TRUE );					
							$bidcheck = get_post_meta(get_the_ID(), 'estimatechosen', TRUE);
								if ($declined)
									{
									echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/error.png' . "' title='" . __('Sorry, this is not the estimate chosen by the job poster.' , 'responsive') . "'>";
								_e('The job lister has declined this offer but is still taking estimates and bids', 'responsive');									
									}
								elseif ($bidcheck == get_comment_ID())
									{
									// this is the winning estimate
									echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/award.png' . "' title='" . __('And the winner is ......' , 'responsive') . "'>";
									_e('The job lister has chosen this offer and has closed the job offer', 'responsive');
									}
								elseif (!empty($bidcheck))
									{
									// estimate is chosen but it's not us
									echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/error.png' . "' title='" . __('Sorry, this is not the estimate chosen by the job poster.' , 'responsive') . "'>";
									_e('The job lister has declined this offer and has closed this job offer.', 'responsive');
									}
								else
									{
									echo "<img src='" . get_bloginfo('stylesheet_directory') .'/library/images/question.png' . "' >";
									printf(__('%1$s has not yet decided to accept or decline this offer','responsive'), get_the_author()) ;
									}
							}?>	
					</div>						
				</div>
				<?php
				// estimate response box - small dashed
				if (wp_verify_nonce($_POST['respond'],get_comment_ID() )  && $_POST['commid'] == get_comment_ID() )	//security
					{
					echo "<div class='estimate-comment'>";
					$response = get_comment_meta( get_comment_ID() , 'response', true );
					$link = get_author_posts_url( $current_user->ID , $current_user->user_login ); // author page of currently logged in user
					$response =  stripslashes($response) . "<a href='$link'>$current_user->display_name</a> : ". $_POST['response'] . "<br/>";	
					update_comment_meta( get_comment_ID() , 'response', $response ); 
					echo $response;
					echo "</div>";
					}
				else
					{
					$response = get_comment_meta( get_comment_ID() , 'response', true ); 
					if (!empty($response))
						{
						echo "<div class='estimate-comment'>";
						echo stripslashes($response);
						echo "</div>";
						}
					}
				// review box - small dashed
				if (wp_verify_nonce($_POST['reviewed'],get_comment_ID() )  && $_POST['commid'] == get_comment_ID() )	//security
					{
					echo "<div class='estimate-comment'>";
					//$review = get_comment_meta( get_comment_ID() , 'review', true );
					//$review_project = get_comment_meta( get_comment_ID() , 'review_project', true );
					$link = get_author_posts_url( $current_user->ID , $current_user->user_login ); // author page of currently logged in user
					$pro_link = get_permalink( get_the_ID() );
					$pro_title = get_the_title(get_the_ID());
					$project_link = "<a href='$pro_link'>$pro_title</a><br/>";
					$user_link = $current_user->ID;
					$today = date("F j, Y, g:i a");
					//$review =  stripslashes($review) . "<a href='$link'>$current_user->display_name</a> : ". $_POST['review'] . "<br/>";
					$review = $_POST['review'];
					$user_name = "<a href='$link'>$current_user->display_name</a>";
					update_comment_meta( get_comment_ID() , 'review_project', $project_link );
					update_comment_meta( get_comment_ID() , 'review_project_ID', get_the_ID() );
					add_comment_meta( get_comment_ID() , 'review', $review ); 
					add_comment_meta( get_comment_ID() , 'userID', $user_link );
					add_comment_meta( get_comment_ID() , 'Date', $today );
					add_comment_meta( get_comment_ID() , 'Username', $user_name );
					echo $review;
					echo "</div>";			
					}
				else
					{
					$reviews = get_comment_meta($comment->comment_ID , 'review', false ); 
					$user_name = get_comment_meta($comment->comment_ID , 'Username', false );
					$review_project = get_comment_meta($comment->comment_ID , 'review_project', true );
					if (!empty($review_project))
						{
							$i=0;
							echo "<div class='estimate-comment'>";
							foreach ($reviews as $review):
								echo $user_name[$i].": ";
								echo stripslashes($review)."<br />";
								$i++;
							endforeach;
							echo "</div>";
						}
					
					
					
					
					
					}
		
				// only show comment response when job is still open
				$bidcheck = get_post_meta(get_the_ID(), 'estimatechosen', TRUE);
				// Neu chua co nguoi thang dau gia
				if (empty($bidcheck))
				{
					if ($current_user->ID == get_the_author_meta('ID')||$current_user->ID == $comment->user_id)
					{?>
						<div class='response'>
							<form method='post'>				
							<input type='text' name='response' placeholder="<?php _e( 'respond to this estimate' , 'responsive' ); ?>" >
							<input type="hidden" name="commid" value="<?php comment_ID(); ?>">
							<?php 		
							if (is_user_logged_in() ) 
								{
								wp_nonce_field(get_comment_ID(),'respond');?>
								<input type='submit' value='<?php _e('respond', 'responsive'); ?>' id='button'>
								<?php
								}
							else
								{?>
								<a href="<?php echo wp_login_url( get_permalink() ); ?>" title="Login"><?php _e('log in to respond','responsive');?></a>
								<?php				
								}?>
							</form>
						</div>
						<?php
					}
				}
				// Neu da co nguoi thang dau gia thi Employer co the comment vao phan dau gia - nhan xet - phan nan
				if (!empty($bidcheck)){
						if (($current_user->ID == get_the_author_meta('ID')||$current_user->ID == $comment->user_id) && get_comment_ID() == $bidcheck) {?>
						<div class='response'>					
						<?php
						
						$review = get_comment_meta( get_comment_ID() , 'review', true ); 
						if (($current_user->ID == $comment->user_id) && empty($review)){}
						else {
								if ($current_user->ID != $comment->user_id){
									$user_info = get_userdata($comment->user_id);;
									$contact_info = $user_info->contactinfo;
									$phone = $user_info->phone;
									echo "<div class=\"first red rounded\">";
									echo "<label>";
									_e('How to contact:', 'responsive');
									echo "</label> ".$contact_info;
									echo "<br /><label>";
									_e('Phone:', 'responsive');
									echo "</label> ".$phone;
									echo "</div>";
								}
								?>
							<form method='post'>
							<input type='text' name='review' placeholder="<?php _e( 'Send me feedback.' , 'responsive' ); ?>" >
							<input type="hidden" name="commid" value="<?php comment_ID(); ?>">
							<?php
														 
							if (is_user_logged_in() ) 
								{								
									wp_nonce_field(get_comment_ID(),'reviewed');?>
									<input type='submit' value='<?php _e('review', 'responsive'); ?>' id='button'>
									<?php
									if ($current_user->ID == get_the_author_meta('ID')){
										echo commentsvote_showlink();
										_e('Rate this freelancer', 'responsive');
										echo pullRating($comment->user_id,get_comment_ID(),false,false,false);
										
																				
									}
								}
								
							else
								{?>
								<a href="<?php echo wp_login_url( get_permalink() );?>" title="Login"><?php _e('log in to write a review','responsive');?></a>
								<?php				
								}
						}?>
							</form>
						</div>
						<?php
						
					}
				}?>
					<div style='clear:both'></div>
			</div> <!-----End estimates-middle -->
			<div class='estimates-right'>
				<?php 
				// get author ID and show avatar
				$authorname = $comment->comment_author;
				$cauthor = get_user_by('login', $authorname);
				//echo get_avatar( $comment->user_id, 100  );
				?>
				<h3><?php printf( __( '%s', 'responsive' ), sprintf( '<cite class="fn">%s</cite>', get_comment_author_link() ) );?></h3>
				<?php wpfr_avatar( $comment->user_id,100);?>
				
				<?php				
					echo allRating($comment->user_id,false,false,true,'novote');?>	
			</div>
			
			<div style='clear:both'></div>		
				<a href="<?php echo esc_url( get_comment_link( $comment->comment_ID ) );?>">				
				<time pubdate datetime="<?php comment_time( 'c' );?>">
				<?php //printf( __( 'Posted %1$s at %2$s', 'responsive' ), get_comment_date(), get_comment_time() );?>
				</time></a>
				<?php edit_comment_link( __( '(Edit)', 'responsive' ), ' ' );?>			
		</div> <!---End estimates---->
		<?php if (!empty($bidcheck)){
						if (!$current_user->ID == get_the_author_meta('ID') || get_comment_ID() == $bidcheck) {?>
						<div class='declined_caption_none'></div> <!---End declined_caption---->
						<?php }
						 elseif ($current_user->ID == get_the_author_meta('ID')){?> <div class='declined_caption'><?php _e('You have declined this offer', 'responsive');?></div> <!---End declined_caption---->
						<?php }}?>
		</div> <!---End declined_caption_wrapper---->
		
	<?php	
		break;			
	endswitch;
}
endif;

// simple local avatar	
function wpfr_avatar($id ,$size= '200' )
	{
	/*$imurl = get_user_meta( $id, 'lavatar',TRUE);
	if (strlen($imurl) < 5) $imurl = get_bloginfo('stylesheet_directory') . '/library/images/dunno.jpg';
	$data = "<img src='$imurl' width='$size' height='$size'>";*/
	$data = get_avatar( $id, $size );

	printf( __( '<a href="%1$s" title="%2$s" rel="author">%3$s</a>', 'responsive' ),
		esc_url( get_author_posts_url( $id ) ),
		esc_attr( __( 'View all listings by this person', 'responsive' )),
		$data );	
	}
	
// counters - pulled from content single 
function  responsive_add_view_count() {
	$id = get_the_ID() ;
	$count = get_post_meta( $id, 'viewcount', TRUE);
	if ($count < 1) { update_post_meta( $id, 'viewcount', 1);}
	else {$count++; update_post_meta( $id, 'viewcount', $count);}
	
	// reward post author
	if ($count == 50)
		{
		$score = get_user_meta(get_the_author_meta('ID') ,'score',TRUE );
		$score=$score+5;
		update_user_meta(get_the_author_meta('ID') ,'score',$score );	
		}
	if ($count == 200)
		{
		$score = get_user_meta(get_the_author_meta('ID') ,'score',TRUE );
		$score=$score+15;
		update_user_meta(get_the_author_meta('ID') ,'score',$score );

		$score = get_user_meta(get_the_author_meta('ID') ,'rating',TRUE );
		$score=$score+7;
		update_user_meta(get_the_author_meta('ID') ,'rating',$score );
		}
	}	

// check if title already exists
function wpf_title_exist($title) {
	global $wpdb;
    $number = $wpdb->get_var($wpdb->prepare( "SELECT ID FROM wp_posts WHERE post_title = '" . $title . "' " ) );
    if ( empty($number) ) return FALSE; else return TRUE;	
	}

// lists
function convert_datetime($str) 
{
$isPM = strstr($str,PM);
list($date, $time) = explode(' ', $str);
list($month, $day, $year) = explode('/', $date);
list($hour, $minute, $second) = explode(':', $time);
list($AM) = explode('AM', $time);
list($PM) = explode('PM', $time);
if ($isPM) $hour = $hour + 12;

$timestamp = mktime($hour, $minute, $second, $month, $day, $year);

return $timestamp;
}

//Function tu tim link trong bai viet
function autolink($str, $attributes=array()) {
	$attrs = '';
	foreach ($attributes as $attribute => $value) {
		$attrs .= " {$attribute}=\"{$value}\"";
	}

	$str = ' ' . $str;
	$str = preg_replace(
			'`([^"=\'>])((http|https|ftp)://[^\s<]+[^\s<\.)])`i',
			'$1<a href="$2"'.$attrs.'>$2</a>',
			$str
	);
	$str = substr($str, 1);
	 
	return $str;
}

// ADD NEW COLUMN of POST EDIT ADMIN
function ST4_columns_head($defaults) {
	$defaults['post_id'] = 'ID';
	return $defaults;
}

// SHOW THE ID of POST EDIT ADMIN
function ST4_columns_content($column_name, $post_ID) {
	if ($column_name == 'post_id') {
		$post_id = $post_ID;
		if ($post_id) {
			echo $post_id;
		}
	}
}

add_filter('manage_posts_columns', 'ST4_columns_head');
add_action('manage_posts_custom_column', 'ST4_columns_content', 10, 2);

/**
 * Add columns to the wp-admin user's table
 *
 * @param array $args Associative array where key is wp_usermeta meta_keys or wp_users column names and the value is the display name
 * @return none;
 */
if(!function_exists(load_sortable_user_meta_columns)){
	add_action('admin_init', 'load_sortable_user_meta_columns');
	function load_sortable_user_meta_columns(){
		//THIS IS WHERE YOU ADD THE meta_key => display-title values
		$args = array('is_employer'=>'Employer');
		new sortable_user_meta_columns($args);
	}
}
if(!class_exists(sortable_user_meta_columns)):
class sortable_user_meta_columns{
	var $defaults = array('nicename', 'email', 'url', 'registered','user_nicename', 'user_email', 'user_url', 'user_registered','display_name','name','post_count','ID','id','user_login');
	function __construct($args){
		$this->args = $args;
		add_action('pre_user_query', array(&$this, 'query'));
		add_action('manage_users_custom_column',  array(&$this, 'content'), 10, 3);
		add_filter('manage_users_columns', array(&$this, 'columns'));
		add_filter( 'manage_users_sortable_columns', array(&$this, 'sortable') );
	}
	function query($query){
		$vars = $query->query_vars;
		if(in_array($vars['orderby'], $this->defaults)) return;
		$title = $this->args[$vars['orderby']];
		if(!empty($title)){
			$query->query_from .= " LEFT JOIN wp_usermeta m ON (wp_users.ID = m.user_id  AND m.meta_key = '$vars[orderby]')";
			$query->query_orderby = "ORDER BY m.meta_value ".$vars['order'];
		}
	}
	function columns($columns) {
		foreach($this->args as $key=>$value){
			$columns[$key] = $value;
		}
		return $columns;
	}
	function sortable($columns){
		foreach($this->args as $key=>$value){
			$columns[$key] = $key;
		}
		return $columns;
	}
	function content($value, $column_name, $user_id) {
		$user = get_userdata( $user_id );
		return $user->$column_name;
	}
}
endif;

//redirect wp-login.php page
//add_action('init','custom_login');

function custom_login(){
	global $pagenow;
	if( 'wp-login.php' == $pagenow ) {
		wp_redirect('http://sagojo.com/');
		exit();
	}
}

function implement_ajax() {
	if(isset($_POST['main_catid']))
	{
		$categories=  get_freelance_categories('child_of='.$_POST['main_catid'].'&hide_empty=0&class=cat requiredField');
		foreach ($categories as $cat) {
			$option .= '<option value="'.$cat->term_id.'">';
			$option .= __($cat->cat_name);
			$option .= ' ('.$cat->category_count.')';
			$option .= '</option>';
		}

		echo '<option value="-1" selected="selected">' . __( 'Select a job (Optional)', 'responsive' ) . '</option>'.$option;
		//echo $option;
		die();
		//wp_dropdown_freelance_child_category('child_of='.$_POST['main_catid'].'&show_count=0&selected=-1&hierarchical=1&depth=1&hide_empty=0&class=cat requiredField&exclude=1&show_option_none=' . __( '-- Select one --', 'wpuf' ).'&name=category' );
		//wp_dropdown_freelance_category( 'show_option_none=' . __( '-- Select --', 'wpuf' ) . '&hierarchical=1&hide_empty=0&orderby=name&name=category&id=cat&show_count=0&title_li=&use_desc_for_title=1&class=cat requiredField&exclude=' . $exclude );
	} // end if
}
add_action('wp_ajax_my_special_action', 'implement_ajax');
add_action('wp_ajax_noprivmy_special_action', 'implement_ajax');//for users that are not logged in.


/*Function cho rating - se chinh sua khi co thoi gian*/
/*$server = 'localhost';
$dbuser = 'root';
$dbpass = '';
$dbname = 'sagojo';

$x = mysql_connect($server,$dbuser,$dbpass) or die(mysql_error());
mysql_select_db($dbname,$x);*/
/*
Dynamic Star Rating Redux
Developed by Jordan Boesch
www.boedesign.com
Licensed under Creative Commons - http://creativecommons.org/licenses/by-nc-nd/2.5/ca/

Used CSS from komodomedia.com.
*/

function getRating($id){

	$total = 0;
	$rows = 0;

	$sel = mysql_query("SELECT rating_num FROM wp_ratings WHERE rating_id = '$id'");
	if(mysql_num_rows($sel) > 0){

		while($data = mysql_fetch_assoc($sel)){

			$total = $total + $data['rating_num'];
			$rows++;
		}

		$perc = ($total/$rows) * 20;

		//$newPerc = round($perc/5)*5;
		//return $newPerc.'%';

		$newPerc = round($perc,2);
		return $newPerc.'%';

	} else {

		return '0%';

	}
}

function getcomRating($ip){

	$total = 0;
	$rows = 0;

	$sel = mysql_query("SELECT rating_num FROM wp_ratings WHERE ip = '$ip'");
	if(mysql_num_rows($sel) > 0){

		while($data = mysql_fetch_assoc($sel)){

			$total = $total + $data['rating_num'];
			$rows++;
		}

		$perc = ($total/$rows) * 20;

		//$newPerc = round($perc/5)*5;
		//return $newPerc.'%';

		$newPerc = round($perc,2);
		return $newPerc.'%';

	} else {

		return '0%';

	}
}

function outOfFive($id){

	$total = 0;
	$rows = 0;

	$sel = mysql_query("SELECT rating_num FROM wp_ratings WHERE rating_id = '$id'");
	if(mysql_num_rows($sel) > 0){

		while($data = mysql_fetch_assoc($sel)){

			$total = $total + $data['rating_num'];
			$rows++;
		}

		$perc = ($total/$rows);

		return round($perc,2);
		//return round(($perc*2), 0)/2; // 3.5

	} else {

		return '0';

	}


}

function getVotes($id){

	$sel = mysql_query("SELECT rating_num FROM wp_ratings WHERE rating_id = '$id'");
	$rows = mysql_num_rows($sel);
	if($rows == 0){
		$votes = __('0 Votes','responsive');
	}
	else if($rows == 1){
		$votes = __('1 Vote','responsive');
	} else {
		$votes = $rows."&nbsp".__('Votes','responsive');
	}
	return $votes;

}

function commentRating($ip){
	$text = '<div class="feedback_rated">';
	return $text.'
		<ol class="star-rating2" id="rater_'.$ip.'">
		<li class="current-rating" style="width:'.getcomRating($ip).';" id="ul_'.$ip.'"></li>		
		</ol></div>';
}

function allRating($id,$show5 = false, $showPerc = false, $showVotes = false, $static = NULL){

	// Check if they have already voted...
	$text = '';

	$sel = mysql_query("SELECT id FROM wp_ratings WHERE IP = '$ip' AND rating_id = '$id'");
	echo mysql_error();
	if(mysql_num_rows($sel) > 0 || $static == 'novote'){



		if($show5 || $showPerc || $showVotes){

			$text .= '<div class="rated_text">';
				
		}
			
		if($show5){
			$text .= __('Rated','responsive').' <span id="outOfFive_'.$id.'" class="out5Class">'.outOfFive($id).'</span>/5';
		}
		if($showPerc){
			$text .= ' (<span id="percentage_'.$id.'" class="percentClass">'.getRating($id).'</span>)';
		}
		if($showVotes){
			$text .= ' (<span id="showvotes_'.$id.'" class="votesClass">'.getVotes($id).'</span>)';
		}
			
		if($show5 || $showPerc || $showVotes){
				
			$text .= '</div>';

		}


		return $text.'
			<ul class="star-rating2" id="rater_'.$id.'">
				<li class="current-rating" style="width:'.getRating($id).';" id="ul_'.$id.'"></li>
				<li><a onclick="return false;" href="#" title="'.__('1 star out of 5', 'responsive').'" class="one-star" >1</a></li>
				<li><a onclick="return false;" href="#" title="'.__('2 stars out of 5', 'responsive').'" class="two-stars">2</a></li>
				<li><a onclick="return false;" href="#" title="'.__('3 stars out of 5', 'responsive').'" class="three-stars">3</a></li>
				<li><a onclick="return false;" href="#" title="'.__('4 stars out of 5', 'responsive').'" class="four-stars">4</a></li>
				<li><a onclick="return false;" href="#" title="'.__('5 stars out of 5', 'responsive').'" class="five-stars">5</a></li>
			</ul>
			<div id="loading_'.$id.'"></div>';


	} else {

		if($show5 || $showPerc || $showVotes){
				
			$text .= '<div class="rated_text">';
				
		}
		if($show5){
			$show5bool = 'true';
			$text .= 'Rated <span id="outOfFive_'.$id.'" class="out5Class">'.outOfFive($id).'</span>/5';
		} else {
			$show5bool = 'false';
		}
		if($showPerc){
			$showPercbool = 'true';
			$text .= ' (<span id="percentage_'.$id.'" class="percentClass">'.getRating($id).'</span>)';
		} else {
			$showPercbool = 'false';
		}
		if($showVotes){
			$showVotesbool = 'true';
			$text .= ' (<span id="showvotes_'.$id.'" class="votesClass">'.getVotes($id).'</span>)';
		} else {
			$showVotesbool = 'false';
		}
			
		if($show5 || $showPerc || $showVotes){

			$text .= '</div>';
				
		}

		return $text.'
			<ul class="star-rating" id="rater_'.$id.'">
				<li class="current-rating" style="width:'.getRating($id).';" id="ul_'.$id.'"></li>
				<li><a onclick="rate(\'1\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=1&ip='.$ip.'" title="'.__('1 star out of 5', 'responsive').'" class="one-star" >1</a></li>
				<li><a onclick="rate(\'2\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=2&ip='.$ip.'" title="'.__('2 stars out of 5', 'responsive').'" class="two-stars">2</a></li>
				<li><a onclick="rate(\'3\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=3&ip='.$ip.'" title="'.__('3 stars out of 5', 'responsive').'" class="three-stars">3</a></li>
				<li><a onclick="rate(\'4\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=4&ip='.$ip.'" title="'.__('4 stars out of 5', 'responsive').'" class="four-stars">4</a></li>
				<li><a onclick="rate(\'5\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=5&ip='.$ip.'" title="'.__('5 stars out of 5', 'responsive').'" class="five-stars">5</a></li>
			</ul>
			<div id="loading_'.$id.'"></div>';

	}
}

function pullRating($id,$ip,$show5 = false, $showPerc = false, $showVotes = false, $static = NULL){

	// Check if they have already voted...
	$text = '';

	$sel = mysql_query("SELECT id FROM wp_ratings WHERE IP = '$ip' AND rating_id = '$id'");
	echo mysql_error();
	if(mysql_num_rows($sel) > 0 || $static == 'novote'){



		if($show5 || $showPerc || $showVotes){

			$text .= '<div class="rated_text">';
				
		}
			
		if($show5){
			$text .= __('Rated','responsive').' <span id="outOfFive_'.$id.'" class="out5Class">'.outOfFive($id).'</span>/5';
		}
		if($showPerc){
			$text .= ' (<span id="percentage_'.$id.'" class="percentClass">'.getRating($id).'</span>)';
		}
		if($showVotes){
			$text .= ' (<span id="showvotes_'.$id.'" class="votesClass">'.getVotes($id).'</span>)';
		}
			
		if($show5 || $showPerc || $showVotes){
				
			$text .= '</div>';

		}


		return $text.'
			<ul class="star-rating2" id="rater_'.$id.'">
				<li class="current-rating" style="width:'.getcomRating($id).';" id="ul_'.$id.'"></li>
				<li><a onclick="return false;" href="#" title="'.__('1 star out of 5', 'responsive').'" class="one-star" >1</a></li>
				<li><a onclick="return false;" href="#" title="'.__('2 stars out of 5', 'responsive').'" class="two-stars">2</a></li>
				<li><a onclick="return false;" href="#" title="'.__('3 stars out of 5', 'responsive').'" class="three-stars">3</a></li>
				<li><a onclick="return false;" href="#" title="'.__('4 stars out of 5', 'responsive').'" class="four-stars">4</a></li>
				<li><a onclick="return false;" href="#" title="'.__('5 stars out of 5', 'responsive').'" class="five-stars">5</a></li>
			</ul>
			<div id="loading_'.$id.'"></div>';


	} else {

		if($show5 || $showPerc || $showVotes){
				
			$text .= '<div class="rated_text">';
				
		}
		if($show5){
			$show5bool = 'true';
			$text .= 'Rated <span id="outOfFive_'.$id.'" class="out5Class">'.outOfFive($id).'</span>/5';
		} else {
			$show5bool = 'false';
		}
		if($showPerc){
			$showPercbool = 'true';
			$text .= ' (<span id="percentage_'.$id.'" class="percentClass">'.getRating($id).'</span>)';
		} else {
			$showPercbool = 'false';
		}
		if($showVotes){
			$showVotesbool = 'true';
			$text .= ' (<span id="showvotes_'.$id.'" class="votesClass">'.getVotes($id).'</span>)';
		} else {
			$showVotesbool = 'false';
		}
			
		if($show5 || $showPerc || $showVotes){

			$text .= '</div>';
				
		}

		return $text.'
			<ul class="star-rating" id="rater_'.$id.'">
				<li class="current-rating" style="width:'.getcomRating($ip).';" id="ul_'.$id.'"></li>
				<li><a onclick="rate(\'1\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=1&ip='.$ip.'" title="'.__('1 star out of 5', 'responsive').'" class="one-star" >1</a></li>
				<li><a onclick="rate(\'2\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=2&ip='.$ip.'" title="'.__('2 stars out of 5', 'responsive').'" class="two-stars">2</a></li>
				<li><a onclick="rate(\'3\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=3&ip='.$ip.'" title="'.__('3 stars out of 5', 'responsive').'" class="three-stars">3</a></li>
				<li><a onclick="rate(\'4\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=4&ip='.$ip.'" title="'.__('4 stars out of 5', 'responsive').'" class="four-stars">4</a></li>
				<li><a onclick="rate(\'5\',\''.$id.'\',\''.$ip.'\','.$show5bool.','.$showPercbool.','.$showVotesbool.'); return false;" href="'.site_url().'/wp-content/themes/responsive/star-rating/includes/rating_process.php?id='.$id.'&rating=5&ip='.$ip.'" title="'.__('5 stars out of 5', 'responsive').'" class="five-stars">5</a></li>
			</ul>
			<div id="loading_'.$id.'"></div>';

	}
}

// Added in version 1.5
// Fixed sort in version 1.7
function getTopRated($limit, $table, $idfield, $namefield){

	$result = '';

	$sql = "SELECT COUNT(wp_ratings.id) as rates,wp_ratings.rating_id,".$table.".".$namefield." as thenamefield,ROUND(AVG(wp_ratings.rating_num),2) as rating
			FROM wp_ratings,".$table." WHERE ".$table.".".$idfield." = wp_ratings.rating_id GROUP BY rating_id
			ORDER BY rates DESC,rating DESC LIMIT ".$limit."";
		
	$sel = mysql_query($sql);

	$result .= '<ul class="topRatedList">'."\n";

	while($data = @mysql_fetch_assoc($sel)){
		$result .= '<li>'.$data['thenamefield'].' ('.$data['rating'].')</li>'."\n";
	}

	$result .= '</ul>'."\n";

	return $result;

}
/*END Function cho rating - se chinh sua khi co thoi gian*/

/*Get tag by category*/
	
function get_category_tags($args) {
	global $wpdb;
	$tags = $wpdb->get_results
	("
		SELECT DISTINCT terms2.term_id as tag_id, terms2.name as tag_name, null as tag_link
		FROM
			wp_posts as p1
			LEFT JOIN wp_term_relationships as r1 ON p1.ID = r1.object_ID
			LEFT JOIN wp_term_taxonomy as t1 ON r1.term_taxonomy_id = t1.term_taxonomy_id
			LEFT JOIN wp_terms as terms1 ON t1.term_id = terms1.term_id,

			wp_posts as p2
			LEFT JOIN wp_term_relationships as r2 ON p2.ID = r2.object_ID
			LEFT JOIN wp_term_taxonomy as t2 ON r2.term_taxonomy_id = t2.term_taxonomy_id
			LEFT JOIN wp_terms as terms2 ON t2.term_id = terms2.term_id
		WHERE
			t1.taxonomy = 'category' AND p1.post_status = 'publish' AND terms1.term_id IN (".$args['categories'].") AND
			t2.taxonomy = 'post_tag' AND p2.post_status = 'publish'
			AND p1.ID = p2.ID
		ORDER by tag_name
	");
	$count = 0;
	foreach ($tags as $tag) {
		$tags[$count]->tag_link = get_tag_link($tag->tag_id);
		$count++;
	}
	return $tags;
}
/*Get tag by category*/
 /*Custom search by HANH*/
function template_chooser($template)
{
	global $wp_query;
	$post_type = get_query_var('post_type');
	if( $wp_query->is_search && $post_type == 'freelance_post' )
	{
		return locate_template('archive-search.php');  //  redirect to archive-search.php
	}
	return $template;
}
add_filter('template_include', 'template_chooser');
/*Custom search by HANH*/


/**

* Set the custom excerpt length to return first 50 words.

*/

function max_magazine_custom_excerpt_length( $length ) {

	return 50;

}

add_filter( 'excerpt_length', 'max_magazine_custom_excerpt_length', 999 );



/**

* Set the format for the more in excerpt, return ... instead of [...]

*/

function max_magazine_excerpt_more( $more ) {

	return '...';

}

add_filter('excerpt_more', 'max_magazine_excerpt_more');



/*wordpress Hack: auto link rel="nofollow" */

add_filter('the_content', 'auto_nofollow');
 
function auto_nofollow($content) {
    //return stripslashes(wp_rel_nofollow($content));
 
    return preg_replace_callback('/<a>]+/', 'auto_nofollow_callback', $content);
}
 
function auto_nofollow_callback($matches) {
    $link = $matches[0];
    $site_link = get_bloginfo('url');
 
    if (strpos($link, 'rel') === false) {
        $link = preg_replace("%(href=S(?!$site_link))%i", 'rel="nofollow" $1', $link);
    } elseif (preg_match("%href=S(?!$site_link)%i", $link)) {
        $link = preg_replace('/rel=S(?!nofollow)S*/i', 'rel="nofollow"', $link);
    }
    return $link;
}
/* End wordpress Hack: auto link rel="nofollow" */


/**

* Tell WordPress to run max_magazine_setup() when the 'after_setup_theme' hook is run.

*/



add_action( 'after_setup_theme', 'max_magazine_setup' );



if ( ! function_exists( 'max_magazine_setup' ) ):



function max_magazine_setup() {


	/**

	* Add default posts and comments RSS feed links to <head>.

	*/

	add_theme_support( 'automatic-feed-links' );



	/**

	* This theme uses Featured Images (also known as post thumbnails) for per-post/per-page Custom Header images

	*/

	if ( function_exists( 'add_theme_support' ) ) {

		add_theme_support( 'post-thumbnails' );

	}
	
	
	/**
	
	* Add large image size for news letter.
	
	*/
	
	add_image_size( 'large-image', 660, 210, true );		//featured post thumbnail
	
	/**
	
	* Add small image size for news letter.
	
	*/
	
	add_image_size( 'small-image', 210, 210, true );		//featured post thumbnail



}

endif; // max_magazine_setup

/* Roles & Capabilities */
add_role('marketer', 'Marketer', array(
    'read' => true, // True allows that capability, False specifically removes it.
    'edit_posts' => true,
    'delete_posts' => true,
    'sent_emails' => true //last in array needs no comma!
));